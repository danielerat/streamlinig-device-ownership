openapi: 3.0.3
info:
  title: Streamlining Device Ownership Docs
  version: 1.0.0
  description: A solution of An Electronic Device Ownership Tracking Web Application
paths:
  /auth/jwt/create/:
    post:
      operationId: auth_jwt_create_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /auth/jwt/refresh/:
    post:
      operationId: auth_jwt_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /auth/jwt/verify/:
    post:
      operationId: auth_jwt_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
  /auth/users/:
    get:
      operationId: auth_users_list
      tags:
      - auth
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: auth_users_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
  /auth/users/{id}/:
    get:
      operationId: auth_users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - auth
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: auth_users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: auth_users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: auth_users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - auth
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /auth/users/activation/:
    post:
      operationId: auth_users_activation_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Activation'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activation'
          description: ''
  /auth/users/me/:
    get:
      operationId: auth_users_me_retrieve
      tags:
      - auth
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: auth_users_me_update
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: auth_users_me_partial_update
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: auth_users_me_destroy
      tags:
      - auth
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /auth/users/resend_activation/:
    post:
      operationId: auth_users_resend_activation_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /auth/users/reset_password/:
    post:
      operationId: auth_users_reset_password_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /auth/users/reset_password_confirm/:
    post:
      operationId: auth_users_reset_password_confirm_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
  /auth/users/reset_phone_number/:
    post:
      operationId: auth_users_reset_phone_number_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /auth/users/reset_phone_number_confirm/:
    post:
      operationId: auth_users_reset_phone_number_confirm_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameResetConfirm'
          description: ''
  /auth/users/set_password/:
    post:
      operationId: auth_users_set_password_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetPassword'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPassword'
          description: ''
  /auth/users/set_phone_number/:
    post:
      operationId: auth_users_set_phone_number_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUsername'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetUsername'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetUsername'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetUsername'
          description: ''
  /streamlining/v1/devices/:
    get:
      operationId: streamlining_v1_devices_list
      tags:
      - streamlining
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
          description: ''
    post:
      operationId: streamlining_v1_devices_create
      tags:
      - streamlining
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Device'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Device'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: ''
  /streamlining/v1/devices/{device_pk}/images/:
    get:
      operationId: streamlining_v1_devices_images_list
      parameters:
      - in: path
        name: device_pk
        schema:
          type: string
        required: true
      tags:
      - streamlining
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceImage'
          description: ''
    post:
      operationId: streamlining_v1_devices_images_create
      parameters:
      - in: path
        name: device_pk
        schema:
          type: string
        required: true
      tags:
      - streamlining
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeviceImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeviceImage'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceImage'
          description: ''
  /streamlining/v1/devices/{device_pk}/images/{id}/:
    get:
      operationId: streamlining_v1_devices_images_retrieve
      parameters:
      - in: path
        name: device_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - streamlining
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceImage'
          description: ''
    put:
      operationId: streamlining_v1_devices_images_update
      parameters:
      - in: path
        name: device_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - streamlining
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeviceImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeviceImage'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceImage'
          description: ''
    patch:
      operationId: streamlining_v1_devices_images_partial_update
      parameters:
      - in: path
        name: device_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - streamlining
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDeviceImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDeviceImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDeviceImage'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceImage'
          description: ''
    delete:
      operationId: streamlining_v1_devices_images_destroy
      parameters:
      - in: path
        name: device_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - streamlining
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /streamlining/v1/devices/{id}/:
    get:
      operationId: streamlining_v1_devices_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this device.
        required: true
      tags:
      - streamlining
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: ''
    put:
      operationId: streamlining_v1_devices_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this device.
        required: true
      tags:
      - streamlining
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Device'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Device'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: ''
    patch:
      operationId: streamlining_v1_devices_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this device.
        required: true
      tags:
      - streamlining
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDevice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDevice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDevice'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: ''
    delete:
      operationId: streamlining_v1_devices_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this device.
        required: true
      tags:
      - streamlining
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /streamlining/v1/devices/{id}/transfer/:
    post:
      operationId: streamlining_v1_devices_transfer_create
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this device.
        required: true
      tags:
      - streamlining
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Device'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Device'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: ''
components:
  schemas:
    Activation:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
      required:
      - token
      - uid
    CategoryEnum:
      enum:
      - phone
      - computer
      - tablet
      - accessory
      - others
      type: string
      description: |-
        * `phone` - Phone
        * `computer` - Computer
        * `tablet` - Tablet
        * `accessory` - Accessory
        * `others` - Others
    Device:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          title: Device Name
          maxLength: 255
        model:
          type: string
          maxLength: 255
        serial_number:
          type: string
          maxLength: 255
        mac_address:
          type: string
          maxLength: 100
        imei:
          type: string
          title: IMEI Address
          maxLength: 100
        price:
          type: number
          format: double
          maximum: 10000000
          minimum: 1
          exclusiveMaximum: true
        category:
          $ref: '#/components/schemas/CategoryEnum'
        desc:
          type: string
          title: Device Description
        quality:
          allOf:
          - $ref: '#/components/schemas/QualityEnum'
          maximum: 5
          minimum: 1
        status:
          $ref: '#/components/schemas/StatusEnum'
        owner:
          type: integer
        images:
          type: array
          items:
            $ref: '#/components/schemas/DeviceImage'
          readOnly: true
        warranty:
          allOf:
          - $ref: '#/components/schemas/Warranty'
          readOnly: true
        transfers:
          type: array
          items:
            $ref: '#/components/schemas/Transfer'
          readOnly: true
      required:
      - desc
      - id
      - images
      - imei
      - mac_address
      - model
      - name
      - owner
      - price
      - serial_number
      - transfers
      - warranty
    DeviceImage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        image:
          type: string
          format: uri
      required:
      - id
      - image
    PasswordResetConfirm:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
        new_password:
          type: string
      required:
      - new_password
      - token
      - uid
    PatchedDevice:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          title: Device Name
          maxLength: 255
        model:
          type: string
          maxLength: 255
        serial_number:
          type: string
          maxLength: 255
        mac_address:
          type: string
          maxLength: 100
        imei:
          type: string
          title: IMEI Address
          maxLength: 100
        price:
          type: number
          format: double
          maximum: 10000000
          minimum: 1
          exclusiveMaximum: true
        category:
          $ref: '#/components/schemas/CategoryEnum'
        desc:
          type: string
          title: Device Description
        quality:
          allOf:
          - $ref: '#/components/schemas/QualityEnum'
          maximum: 5
          minimum: 1
        status:
          $ref: '#/components/schemas/StatusEnum'
        owner:
          type: integer
        images:
          type: array
          items:
            $ref: '#/components/schemas/DeviceImage'
          readOnly: true
        warranty:
          allOf:
          - $ref: '#/components/schemas/Warranty'
          readOnly: true
        transfers:
          type: array
          items:
            $ref: '#/components/schemas/Transfer'
          readOnly: true
    PatchedDeviceImage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        image:
          type: string
          format: uri
    PatchedUser:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 254
        national_id:
          type: string
          pattern: ^[0-9]{16}$
          maxLength: 16
        id:
          type: integer
          readOnly: true
        phone_number:
          type: string
          readOnly: true
    QualityEnum:
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      type: integer
      description: |-
        * `1` - One Star
        * `2` - Two Stars
        * `3` - Three Stars
        * `4` - Four Stars
        * `5` - New
    SendEmailReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    SetPassword:
      type: object
      properties:
        new_password:
          type: string
        current_password:
          type: string
      required:
      - current_password
      - new_password
    SetUsername:
      type: object
      properties:
        current_password:
          type: string
        new_phone_number:
          type: string
          title: Phone number
          maxLength: 10
      required:
      - current_password
      - new_phone_number
    StatusEnum:
      enum:
      - lost
      - stolen
      - active
      - inactive
      type: string
      description: |-
        * `lost` - Lost
        * `stolen` - Stolen
        * `active` - Active
        * `inactive` - Inactive
    TokenObtainPair:
      type: object
      properties:
        phone_number:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - phone_number
      - refresh
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
    Transfer:
      type: object
      properties:
        id:
          type: string
          format: uuid
        transferor:
          type: integer
        transferee:
          type: integer
        last_confirm:
          type: string
          format: date-time
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
      required:
      - created
      - last_confirm
      - transferee
      - transferor
    User:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 254
        national_id:
          type: string
          pattern: ^[0-9]{16}$
          maxLength: 16
        id:
          type: integer
          readOnly: true
        phone_number:
          type: string
          readOnly: true
      required:
      - email
      - id
      - national_id
      - phone_number
    UserCreate:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 254
        national_id:
          type: string
          pattern: ^[0-9]{16}$
          maxLength: 16
        phone_number:
          type: string
          maxLength: 10
        id:
          type: integer
          readOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - email
      - id
      - national_id
      - password
      - phone_number
    UsernameResetConfirm:
      type: object
      properties:
        new_phone_number:
          type: string
          title: Phone number
          maxLength: 10
      required:
      - new_phone_number
    Warranty:
      type: object
      properties:
        device:
          type: string
          format: uuid
          nullable: true
        days:
          type: integer
          maximum: 1100
          minimum: 0
          title: Warranty Life
          description: Warranty in days
        created:
          type: string
          format: date-time
          readOnly: true
        remaining_days:
          type: string
          readOnly: true
      required:
      - created
      - remaining_days
  securitySchemes:
    jwtAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "streamlining"
